## We need a place in the /home mount to store info that we'd like to add to /etc/passwd, 
## so UIDs can be mapped to usernames for file listing etc.
## (and other persistent admin-level config related to the /home mount)

# if no setting for location for config info, set one
if [[ -z $ADMIN_HOME_DIR ]]; then
  ADMIN_HOME_DIR=/home/admin_config
fi

# if the dir doesn't exist, create it, write permissions only for admins, just read for others (to source/read things from there, but not cd and look around)
if [[ ! -d $ADMIN_HOME_DIR ]]; then
  mkdir -p $ADMIN_HOME_DIR/automanaged
  chown -R dsadmin:dsadmins $ADMIN_HOME_DIR
  chmod -R 774 $ADMIN_HOME_DIR
fi

# if a class-specific /etc/passwd entry doesn't exist, add it
# here's where entries for /etc/passwd will be appended; but we can't put them directly in /etc/passwd because changes there don't 
# persist
# TODO: if lots of people log in for the first time simultaneously, will the NFS be able handle the simultaneous appends? if not some sort of central service to handle this could be setup...
if ! grep -E "^$NB_USER:" $ADMIN_HOME_DIR/automanaged/etc_passwd_additions; then
  echo "$NB_USER:x:$NB_UID:100:,,,:/home/$NB_USER:/bin/bash" >> $ADMIN_HOME_DIR/automanaged/etc_passwd_additions
fi

# add entries from the persisted etc_passwd_additions to the container /etc/passwd
cat $ADMIN_HOME_DIR/automanaged/etc_passwd_additions >> /etc/passwd

# set umask (defaulting to rw-rw---- for files and  rwxrwx--- for dirs, so that new files are by 
# default read/write by 
# NB_USER:users; thus the group and user are set appropriately, but they are writable by anyone
# in the users group - including admin users. Trick is, only the owner and anyone in dsadmins
# can access inside home dir itself, because that is owned by NB_USER:dsadmins rwxrwx---)
echo "Defaults umask=007" >> /etc/sudoers
# allow sudo to use this more permissive umasks than the default of union (for use by user jupyter process which is run with sudo -u $NB_USER)
echo "Defaults umask_override" >> /etc/sudoers 


